CREATE DATABASE IF NOT EXISTS sgojava;
USE sgojava;

CREATE TABLE IF NOT EXISTS PERMISSAO_USUARIO(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    PERMISSAO VARCHAR(100) NOT NULL,
    TABELA VARCHAR(100),
    VISUALIZAR BOOL DEFAULT FALSE,
    EDITAR BOOL DEFAULT FALSE,
    DELETAR BOOL DEFAULT FALSE,
    INCLUIR BOOL DEFAULT FALSE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS GRUPO_USUARIO(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    ACAO VARCHAR(200) NOT NULL,
    OBSERVACAO VARCHAR(500)
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS GRUPO_PERMISSAO(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    PERMISSAO_USUARIO INT NOT NULL,
	GRUPO_USUARIO INT NOT NULL,
    FOREIGN KEY (PERMISSAO_USUARIO) REFERENCES PERMISSAO_USUARIO(ID) ON DELETE CASCADE,
    FOREIGN KEY (GRUPO_USUARIO) REFERENCES GRUPO_USUARIO(ID) ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS FUNCAO(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(200) NOT NULL
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS FUNCIONARIO(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    SEXO CHAR(1) NOT NULL,
    DATA_NASCIMENTO DATE NOT NULL,
    FUNCAO INT NOT NULL,
    FOREIGN KEY (FUNCAO) REFERENCES FUNCAO(ID) ON DELETE CASCADE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW()
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS USUARIO(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    LOGIN VARCHAR(50) NOT NULL,
    SENHA VARCHAR(50) NOT NULL,
    GRUPO_USUARIO INT NOT NULL,
    FOREIGN KEY (GRUPO_USUARIO) REFERENCES GRUPO_USUARIO(ID) ON DELETE CASCADE,
    FUNCIONARIO INT,
    FOREIGN KEY (FUNCIONARIO) REFERENCES FUNCIONARIO(ID) ON DELETE CASCADE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW()
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ESPECIE_ANIMAL(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(50) NOT NULL,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW()
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS RACA_ANIMAL(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(50) NOT NULL,
    ESPECIE INT NOT NULL,
    PORTE CHAR(1),
    FOREIGN KEY (ESPECIE) REFERENCES ESPECIE_ANIMAL(ID) ON DELETE CASCADE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW()
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS SAUDE_ANIMAL(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    PESO DOUBLE,
    CASTRADO BOOL,
    OBSERVACAO_CASTRACAO VARCHAR(300),
    VACINADO BOOL,
    OBSERVACAO_VACINA VARCHAR(300),
    DOENTE BOOL,
    OBSERVACAO_DOENCA VARCHAR(300),
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW()
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ANIMAL(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    IDADE DOUBLE,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW(),
    RACA INT,
    FOREIGN KEY (RACA) REFERENCES RACA_ANIMAL(ID) ON DELETE CASCADE,
    SEXO CHAR(1),
	SAUDE INT,
    FOREIGN KEY (SAUDE) REFERENCES SAUDE_ANIMAL(ID) ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ADOTANTE(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(200) NOT NULL,
    TELEFONE VARCHAR(200) NOT NULL,
    OBSERVACAO VARCHAR(500),
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW()
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS ADOCAO(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    DATA_ADOCAO DATE NOT NULL,
    ANIMAL INT NOT NULL,
    ADOTANTE INT NOT NULL,
    DATA_CADASTRO DATETIME NOT NULL DEFAULT NOW(),
    FOREIGN KEY (ANIMAL) REFERENCES ANIMAL(ID) ON DELETE CASCADE,
    FOREIGN KEY (ADOTANTE) REFERENCES ADOTANTE(ID) ON DELETE CASCADE
) ENGINE=INNODB;

CREATE TABLE IF NOT EXISTS USUARIO_LOGADO(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USUARIO_ID INT NOT NULL,
    MAC_ADDRESS TEXT,
    DATA_EXPIRACAO DATETIME NOT NULL DEFAULT (CURRENT_TIMESTAMP + INTERVAL 10 MINUTE)
) ENGINE=INNODB;

CREATE EVENT IF NOT EXISTS LIMPA_LOGIN_EXPIRADO 
ON SCHEDULE EVERY 1 MINUTE
DO
	DELETE FROM USUARIO_LOGADO WHERE DATA_EXPIRACAO < CURRENT_TIMESTAMP();

-- CRIAR PRIMEIRAMENTE A PERMISSÃO ESPECIFICA DO USUÁRIO E CADASTRAR DIRETAMENTE NO BANCO DE DADOS ISSO O USUÁRIO NÃO IRÁ FAZER
-- IR ADICIONANDO CONFORME AS TELAS. 
-- FUTURAMENTE DEVERÁ SER CRIADO UMA NOVA TELA PARA LIBERAR O USUARIO A EDITAR AS PERMIÇÕES VISUALIZAR ,EDITAR ,DELETAR ,INCLUIR SEPARADAMENTE.
INSERT INTO PERMISSAO_USUARIO(PERMISSAO,TABELA ,VISUALIZAR) VALUES ("VISUALIZAR TABELA PERMISSAO USUARIO", "PERMISSAO_USUARIO", TRUE);
INSERT INTO PERMISSAO_USUARIO(PERMISSAO,TABELA ,VISUALIZAR ,EDITAR ,DELETAR ,INCLUIR) VALUES ("TOTAL TABELA GRUPO USUARIO", "GRUPO_USUARIO", TRUE, TRUE, TRUE, TRUE);

-- ADICIONAR UM GRUPO A QUAL VAI PERTENCER AS PERMISSÕES ISSO O USUÁRIO PODE FAZER.
INSERT INTO GRUPO_USUARIO(ACAO, OBSERVACAO) VALUES ("LICENÇA TOTAL", "");

-- CRIAR O VINCULO DO GRUPO COM AS PERMISSOES
INSERT INTO GRUPO_PERMISSAO(GRUPO_USUARIO, PERMISSAO_USUARIO) VALUES ((SELECT MAX(ID) FROM GRUPO_USUARIO WHERE ACAO = "LICENÇA TOTAL"), 
																	  (SELECT MAX(ID) FROM PERMISSAO_USUARIO WHERE TABELA = "PERMISSAO_USUARIO")); 
                                                                      
INSERT INTO GRUPO_PERMISSAO(GRUPO_USUARIO, PERMISSAO_USUARIO) VALUES ((SELECT MAX(ID) FROM GRUPO_USUARIO WHERE ACAO = "LICENÇA TOTAL"), 
																	  (SELECT MAX(ID) FROM PERMISSAO_USUARIO WHERE TABELA = "GRUPO_USUARIO")); 


-- POR FIM ADICIONAR O GRUPO AO USUARIO INFORMADO LIBERANDO ASSIM TODAS AS PERMISSOES.
INSERT INTO USUARIO(LOGIN, SENHA, GRUPO_USUARIO) VALUES ("sgo_master", "sgo", (SELECT MAX(ID) FROM GRUPO_USUARIO WHERE ACAO = "LICENÇA TOTAL"));